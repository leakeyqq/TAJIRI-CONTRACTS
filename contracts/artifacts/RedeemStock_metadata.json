{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "initialOwner",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "shortName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "longName",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "contractAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "stockPriceEth",
						"type": "uint256"
					}
				],
				"name": "AddedStock",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "stockContract",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "stockAmount",
						"type": "uint256"
					}
				],
				"name": "MintedStockForUser",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "shortName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "longName",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "contractAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "stockPriceEth",
						"type": "uint256"
					}
				],
				"name": "RemovedStock",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "contractAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldPrice",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newPrice",
						"type": "uint256"
					}
				],
				"name": "UpdatedStockPrice",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "shortName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "longName",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "contractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "stockPriceEth",
						"type": "uint256"
					}
				],
				"name": "addStock",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllStocks",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "shortName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "longName",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "contractAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "stockPriceEth",
								"type": "uint256"
							}
						],
						"internalType": "struct ManageStock.Stock[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "stockContractAddress",
						"type": "address"
					}
				],
				"name": "mintNewStock",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "stockContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "stockAmountInTokens",
						"type": "uint256"
					}
				],
				"name": "redeemStock",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "contractAddress",
						"type": "address"
					}
				],
				"name": "removeStock",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "contractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "newPrice",
						"type": "uint256"
					}
				],
				"name": "setStockPrice",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "stocks",
				"outputs": [
					{
						"internalType": "string",
						"name": "shortName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "longName",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "contractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "stockPriceEth",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/redeemStock.sol": "RedeemStock"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"contracts/manageStock.sol": {
			"keccak256": "0x99a1ea73226ab85101719b75189a1724b3b4d5b0adf1eccf76a617a27576a3e2",
			"license": "MIT",
			"urls": [
				"bzz-raw://af7810fb2aab800d743aec7f7cc5e2f12eb136b27c113ae4480165b3393395c7",
				"dweb:/ipfs/QmSGNV3AEwZHr8bdaUiz8vs75QAr3QH1ZQ7sE5BjxEP8D2"
			]
		},
		"contracts/mintStock.sol": {
			"keccak256": "0xc98df928b8abbee86f32c9fabead8d2e134e593b6a5355ec4900a0ef71da0e9c",
			"license": "MIT",
			"urls": [
				"bzz-raw://dcf2c45fab84e811406413e6e0589f398425a022a6316f223033f723337ad501",
				"dweb:/ipfs/QmUnTTjYaBfsFMwAHhouQw6BGY9Md8HsNCgQByx6buFDgp"
			]
		},
		"contracts/redeemStock.sol": {
			"keccak256": "0xaa55b6953289f0eca34f93a7c472e1a520faf309da25898c626fe283da70fa48",
			"license": "MIT",
			"urls": [
				"bzz-raw://d5e8eda0d3e6eb5381d6e59dc5e2b9dfcd698355903f56e1d155911c44ae0293",
				"dweb:/ipfs/QmY4nfu1Ez4hdEUYub932UcYcFBJfewWBBdinuyxEJi7DB"
			]
		}
	},
	"version": 1
}